Import method
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESSFUL TESTS
Test with ints and same size lists
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 2))
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Test with ints floats and samesize lists
	>>> matrix = [[1, 3.3], [4.5, 5]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 1.1], [1.5, 1.67]]

Test with TRUE/FALSE
	>>> matrix = [[True], [False]]
	>>> print(matrix_divided(matrix, True))
	[[1.0], [0.0]]

FAILED TESTS
Test with div=0 (ZeroDivision)
	>>> matrix = [[1, 2], [3, 4]]
        >>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
     	...
     	ZeroDivisionError: division by zero

Test with div not equal to int/float
        >>> matrix = [[1, 2], [3, 4]]
        >>> print(matrix_divided(matrix, 'i'))
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

Test with empty and Null lists
	>>> matrix = []
	>>> print(matrix_divided(matrix, 5))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(None, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[], []]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with matrix of other data types but same list size
	>>> matrix = [['a', 'b'], ['c', 'd'], ['e', 'f']]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = ([1, 2, 3], [4, 5, 6])
        >>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats		

	>>> matrix = {[1, 2, 3], [4, 5, 6]}
        >>> print(matrix_divided(matrix, 3))
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with ints but different list sizes
	>>> matrix = [[1, 2], [3]]
        >>> print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test with few/extra args
	>>> matrix = [[1, 2], [3, 4]]
	>>> print(matrix_divided(matrix))
        Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix = [[1, 2], [3, 4]]
        >>> print(matrix_divided(matrix, 4, 2))
        Traceback (most recent call last):
        ...
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given
